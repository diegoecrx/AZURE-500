

https://learn.microsoft.com/en-us/training/modules/manage-security-controls-identity-access/2-identity-management-privileged-access?ns-enrollment-type=learningpath&ns-enrollment-id=learn.wwl.secure-identity-access



Entra ID

External identities

Entra Identity Protection

Entra Connect

Entra Cloud Sync

Entra pass-through authentication

Entra authentication

Kerberos authentication

New Technology Local Area Network Manager (NTLM)

Passwordless authentication

Entra ID single sign-on

Entra Verified ID

Azure role-based access control

Entra Privileged Identity Management

Entra ID governance

Lifecycle workflows

Conditional Access policies


##################################################################################

Microsoft cloud security benchmark: Identity management and privileged access


IM-1: Use centralized identity and authentication system
------------------------------------------------------------------------------------



# Microsoft Entra ID is Azure's identity and authentication management service.

# AWS IAM (Identity and Access Management) is AWS' default identity and authentication management service. 


Through AWS and Azure Single Sign-On (SSO), you can also use Micrsoft Entra ID to manage the identity and access control of AWS to avoid managing duplicate accounts separately in two cloud platforms.

AWS supports Single Sign-On which allows you to bridge your corporate's third party identities (such as Windows Active Directory, or other identity stores) with the AWS identities to avoid creating duplicate accounts to access AWS resources.



Google Cloud's Identity and Access Management (IAM) system is Google Cloud's default identity and authentication management service used for Google Cloud Identity accounts. Use Google Cloud IAM to govern your GCP identity and access management. 

Alternatively, through the Google Cloud Identity and Azure Sigle Sign-On (SSO), you can also use Microsoft Entra ID to manage the identity and access control of GCP to avoid managing duplicate accounts separately in a mutli-cloud environment.






IM-2: Protect identity and authentication systems
------------------------------------------------------------------------------------

Common security controls include:

Restrict privileged roles and accounts
Require strong authentication for all privileged access
Monitor and audit high risk activities




Microsoft Entra ID Identity Secure Score evaluates Microsoft Entra ID for the following configurations:

- Use limited administrative roles
- Turn on user risk policy
- Designate more than one global admin
- Enable policy to block legacy authentication
- Ensure all users can complete multi-factor authentication for secure access
- Require MFA for administrative roles
- Enable self-service password reset
- Do not expire passwords
- Turn on sign-in risk policy
- Do not allow users to grant consent to unmanaged applications


Use Microsoft Entra ID Identity Protection to
- detect, investigate, and remediate identity-based risks




AWS guidance: Use the following security best practices to secure your AWS IAM:

- Set up AWS account root user access keys for emergency access as described in PA-5 (Set up emergency access).
- Follow least privilege principles for access assignments.
- Leverage IAM groups to apply policies instead of individual user(s).
- Follow strong authentication guidance in IM-6 (Use strong authentication controls) for all users.
- Use AWS Organizations SCP (Service Control Policy) and permission boundaries.
- Use IAM Access Advisor to audit service access.
- Use IAM credential report to track user accounts and credential status.





Google Cloud IAM and Cloud Identity services for your organizations:

- Set up a super admin account for emergency access by following the recommendations in PA-5 ("Set up emergency access").
- Create a super admin email address (as the Google Workspace or Cloud Identity super admin account) and this account should be not specific to a particular user in case an emergency recovery is needed.

- Follow least privilege and separation of duties principles.
- Avoid using super admin account for daily activities.
- Leverage Google Cloud Identity groups to apply policies instead of applying policies to individual user(s).
- Follow strong authentication guidance as described in IM-6 ("Use strong authentication controls") for all users that have elevated privileges.

- Use IAM policies to restrict access to resources.
- Use the Organization Policy Service to control and configure constraints on resources.
- Use IAM audit logging within Cloud Audit logs to review privileged activities.



IM-3: Manage application identities securely and automatically
------------------------------------------------------------------------------------

https://learn.microsoft.com/en-us/entra/identity/managed-identities-azure-resources/overview

https://learn.microsoft.com/en-us/entra/identity/managed-identities-azure-resources/managed-identities-status

https://learn.microsoft.com/en-us/powershell/azure/create-azure-service-principal-azureps?view=azps-13.5.0

https://learn.microsoft.com/en-us/entra/identity-platform/howto-authenticate-service-principal-powershell



AWS

For services that don't support IAM roles, use access keys but follow the security best practice such as IM-8 Restrict the exposure of credential and secrets to secure your keys.

AWS IAM roles instead of creating user accounts for resources that support this feature. IAM roles are managed by the platform at the backend and the credentials are temporary and rotated automatically. This avoids creating long-term access keys or a username/password for applications and hard-coded credentials in source code or configuration files.

You may use service-linked roles which are attached with pre-defined permission policies for access between AWS services instead of customizing your own role permissions for the IAM roles.


GCP

Use Policy Intelligence to understand and recognize suspicious activity for service accounts.







IM-4: Authenticate server and services
------------------------------------------------------------------------------------



Authenticate remote servers and services from your client side to ensure you are connecting to trusted server and services. 

The most common server authentication protocol is Transport Layer Security (TLS), where the client-side (often a browser or client device) verifies the server by verifying the server’s certificate was issued by a trusted certificate authority.


Mutual authentication can be used when both the server and the client authenticate one another.

Services such as API Management and API Gateway supports TLS mutual authentication.

https://learn.microsoft.com/en-us/azure/storage/common/transport-layer-security-configure-minimum-version?tabs=portal#use-azure-policy-to-enforce-the-minimum-tls-version



AWS

Your client application should also be designed to verify server/client identity (by verifying the server’s certificate issued by a trusted certificate authority) in the handshake stage.

Services such as API Gateway supports TLS mutual authentication.



GCP

Services such as Cloud Load Balancing support TLS mutual authentication.




IM-5: Use single sign-on (SSO) for application access
------------------------------------------------------------------------------------























